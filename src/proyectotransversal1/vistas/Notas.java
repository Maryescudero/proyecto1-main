/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package proyectotransversal1.vistas;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyectotransversal1.accesoDatos.AlumnoData;
import proyectotransversal1.accesoDatos.InscripcionData;
import proyectotransversal1.accesoDatos.MateriaData;
import proyectotransversal1.entidades.Alumno;
import proyectotransversal1.entidades.Inscripcion;
import proyectotransversal1.entidades.Materia;


public class Notas extends javax.swing.JInternalFrame {
 
    private ArrayList<Alumno> listalum; // me muestra los alumnos
    private ArrayList<Materia> listmat; // me muestra las materias
    private ArrayList<Inscripcion> listins;

    private AlumnoData alumData;
    private InscripcionData inscData;
    private MateriaData matData;

    private DefaultTableModel modelo;
    private Alumno alum;
    private Materia mat = null;
    private Inscripcion insc = null;
    InscripcionData notaActual;
 
    public Notas() {
        initComponents(); // esta bien
        this.setTitle("Actualizac√≠on de Notas");
        alumData= new AlumnoData(); // inicializo 
        listalum = (ArrayList<Alumno>) alumData.listarAlumnos();
        modelo = new DefaultTableModel(){ // creo una clase interna que me invoca a cualquier metodo, hereda de defaultmodel
    
            @Override
            public boolean isCellEditable(int f, int c) { // se ejecuta automaticamente en cada celda
                if (c == 2) {
                    return true;
                }
                return false; 
            }

            
        };
        insc= new Inscripcion();
        inscData = new InscripcionData();
        matData = new MateriaData();
        notaActual= new InscripcionData();

        armarCabecera();
        cargarAlumnos();

    }

   private void cargarAlumnos(){ // esta bien
        for (Alumno item : listalum) {
            jcbAlumnos.addItem(item);
        }
    }
 
    private void armarCabecera() { // esta bien 

        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("id");
        filaCabecera.add("nombre");
        filaCabecera.add("nota");
        for (Object it : filaCabecera) {
            modelo.addColumn(it);
        }
        jtNotas.setModel(modelo);
    }

     private void borrarFilaTabla() { // esta bien
        int indice = modelo.getRowCount() - 1;
        for (int i = indice; i >= 0; i--) { // hacemos una interaccion y removiendo 
            modelo.removeRow(i);

        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcbAlumnos = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtNotas = new javax.swing.JTable();
        jbGuardar = new javax.swing.JButton();
        jbExit = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(149, 138, 131));
        jPanel1.setPreferredSize(new java.awt.Dimension(880, 500));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Algerian", 2, 48)); // NOI18N
        jLabel1.setText("CARGA DE NOTAS");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 410, 30));

        jLabel2.setFont(new java.awt.Font("Arial Unicode MS", 1, 18)); // NOI18N
        jLabel2.setText("Seleccione un Alumno : ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, -1, -1));

        jcbAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbAlumnosActionPerformed(evt);
            }
        });
        jPanel1.add(jcbAlumnos, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 340, 30));

        jtNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtNotas);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 700, 270));

        jbGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/guardar.png"))); // NOI18N
        jbGuardar.setText("GUARDAR");
        jbGuardar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(51, 0, 0), null, null));
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(jbGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 440, 150, 50));

        jbExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cerrar-sesion.png"))); // NOI18N
        jbExit.setText("SALIR");
        jbExit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(51, 0, 0), null, null));
        jbExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExitActionPerformed(evt);
            }
        });
        jPanel1.add(jbExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 440, 150, 50));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-actualizar-94.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 20, 100, 130));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 510));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExitActionPerformed
        dispose();
         JOptionPane.showMessageDialog(this, "SU CARGA HA SIDO EXITOSA");
    }//GEN-LAST:event_jbExitActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
               int filaSelecc = jtNotas.getSelectedRow(); // ESTA BIEN
               if (filaSelecc != -1) {
                   Alumno a = (Alumno) jcbAlumnos.getSelectedItem();
                   int idMateria =(Integer)modelo.getValueAt(filaSelecc,0);
                   double nota = Double.parseDouble((String)modelo.getValueAt(filaSelecc,2));
            inscData.modificarNotas(a.getIdAlumno(), idMateria, nota);
            borrarFilaTabla();
        }else{
                   JOptionPane.showMessageDialog(this, "SE DEBE SELECCIONAR UNA MATERIA PARA EDITAR");
               }
               
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jcbAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbAlumnosActionPerformed
        borrarFilaTabla();
        Alumno elegido = (Alumno) jcbAlumnos.getSelectedItem();
        listins= (ArrayList<Inscripcion>) inscData.obtenerInscripcionesPorAlumno(elegido.getIdAlumno());
        if (listins.size() > 0){
            for (Inscripcion insc : listins) {
                modelo.addRow(new Object[]{
                insc.getMateria().getIdMateria(),
                insc.getMateria().getNombre(),
                insc.getNota()  
                });
            }
        }
    }//GEN-LAST:event_jcbAlumnosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbExit;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JComboBox<Alumno> jcbAlumnos;
    private javax.swing.JTable jtNotas;
    // End of variables declaration//GEN-END:variables
}
